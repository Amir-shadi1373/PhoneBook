// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Phonebook.Infra.Data.Sql.Common;

#nullable disable

namespace Phonebook.Infra.Data.Sql.Migrations
{
    [DbContext(typeof(PhonebookDbContext))]
    [Migration("20230316134005_db")]
    partial class db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Phonebook.Core.Domain.Address.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("Nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Addresses");
                });

            modelBuilder.Entity("Phonebook.Core.Domain.EmailAddress.Email", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Email");
                });

            modelBuilder.Entity("Phonebook.Core.Domain.Person.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Company")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("Nvarchar(200)");

                    b.Property<string>("LastName")
                        .HasColumnType("Nvarchar(200)");

                    b.Property<string>("NikName")
                        .HasColumnType("Nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasColumnType("Nvarchar(200)");

                    b.Property<string>("UserPicture")
                        .HasColumnType("Nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Person");
                });

            modelBuilder.Entity("Phonebook.Core.Domain.Phone.Phone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(13)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Phone");
                });

            modelBuilder.Entity("Phonebook.Core.Domain.SignificantDate.SignificantDate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_SignificantDate");
                });

            modelBuilder.Entity("Phonebook.Core.Domain.Address.Address", b =>
                {
                    b.HasOne("Phonebook.Core.Domain.Person.Person", "user")
                        .WithMany("vAddress")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Phonebook.Core.Domain.EmailAddress.Email", b =>
                {
                    b.HasOne("Phonebook.Core.Domain.Person.Person", "user")
                        .WithMany("vEmail")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Phonebook.Core.Domain.Phone.Phone", b =>
                {
                    b.HasOne("Phonebook.Core.Domain.Person.Person", "user")
                        .WithMany("vPhone")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Phonebook.Core.Domain.SignificantDate.SignificantDate", b =>
                {
                    b.HasOne("Phonebook.Core.Domain.Person.Person", "user")
                        .WithMany("vSignificantDate")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Phonebook.Core.Domain.Person.Person", b =>
                {
                    b.Navigation("vAddress");

                    b.Navigation("vEmail");

                    b.Navigation("vPhone");

                    b.Navigation("vSignificantDate");
                });
#pragma warning restore 612, 618
        }
    }
}
